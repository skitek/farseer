% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/farseer-package.R, R/farseer.R
\docType{package}
\name{farseer}
\alias{farseer}
\title{farseer (R package)}
\usage{
farseer(
  formula = NULL,
  dataFrame,
  additional_targets = NULL,
  farseerModels = NULL,
  test = TRUE,
  ...
)
}
\arguments{
\item{formula}{a formula for building models. If it is omitted, a new formula will be created using
last variable in data.frame as dependent variable and all others as independent variables.}

\item{dataFrame}{a data.frame containing data to be used for training.}

\item{additional_targets}{a list of dependent variables, other then the one specified in formula,
if models for more then one dependand variable should be created. Note, that in current version separate models are
created. If all dependent variables are situated as last variables in the data.frame, farseer can be used without
providing formula, as it will be automatically created.}

\item{farseerModels}{optional parameter, when existing models are supposed to be retrained.
If it remains NULL, a new set of models will be returned.}

\item{test}{boolean, if TRUE the models will be tested. Default is TRUE.}

\item{...}{trainingFraction from \link{farseer.training.vector} how many cases should be a training set?}
}
\value{
\strong{If \code{additional_targets = NULL}, a list:}
\describe{
\item{$models}{\code{\link{farseer.models}}}
\item{$data.frames}{\code{\link{farseer.data.frame}}}
\item{$test}{if tested, predictions, performance and plots are provided}

\strong{If \code{additional_targets} are provided, a list:}
\describe{
\item{\code{$<dependant variable name>}}{list of models, data.frames and test as described above}
\item{\code{$<additional_targets[1]>}}{list of models, data.frames and test as described above, for first additional target}
\item{...}{further models}
\item{\code{$<additional_targets[n]>}}{list of models, data.frames and test as described above, for last additional target}
}
}
}
\description{
Wrapper for easy usage of the farseer package.
}
\details{
It generates three models, a linear model, neural networks and partition tree
wrapped in an \code{\link{farseer.models}}-object. Those models can be then plotted using the generic \code{plot} function.
Additionally, the \code{\link{farseer.data.frame}} are also returned for further reference.

Dependent and independent variables can be either provided as formula, or if all variables should be used
one can simply place the dependent variable as last variable in \code{dataFrame}.
If models should be created for more than one variable simultaneously, additional dependednt variables
can be specified. They will be excluded from \code{dataFrame} prior to training.

\preformatted{##Trains new models. Creates a formula using last variable 
##in data.frame as dependant variable 
##and all others as independent variables.
models <- farseer(dataFrame, test = TRUE, ...)

##Retrains models. Creates a formula using last variable 
##in data.frame as dependant variable 
##and all others as independent variables.
models <- farseer(dataFrame, farseerModels, ...)

##Trains new models according to formula.
models <- farseer(formula, dataFrame, ...)

##Retrains the models using new data. 
models <- farseer(formula, dataFrame, farseerModels, ...)

##Trains new models according to formula, then repeats the process for each variable
##specified in target_variables
models <- farseer(formula, dataFrame, additional_targets = 
c(<additional dependant variable names>), ...)

##Trains new models, then repeats the process for each variable specified 
##in target_variables.
##Creates a formula using last variable in data.frame as dependant variable 
##and all others as independent variables, excluding variables specified 
##in target_variables
models <- farseer(dataFrame, additional_targets = 
                             c(<additional dependant variable names>))
}
}
\section{DISCLAIMER}{


Copyright (C) 2020 Kornel Skitek

This software was developed for research purposes, and its output
should be used with extreme care in clinical situations.
All calculated values should be interpreted within the boundaries
and limitations of trained models.

Under no circumstances is this software a medical product and
no warranty is provided. See license for more details.

additionally, a standard disclaimer from GNU-GPL v. 3.0 applies:

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see \url{http://www.gnu.org/licenses/}.
}

\author{
Kornel Skitek (C) 2020
}
\concept{farseer is a proof-of-concept package for easy machine learning
for clinicians.

It creates three models - linear, partition tree and neural network
for each dependand variable specified by calling \link{farseer} function.
Those models are automatically evaluated using bland-altman or roc curves, 
depending of the type of the target (numeric or factor). 
Please note that only two-level factors are currently supported.
Those evaluations can be visualized using generic plot() function.

An S3 farseer-class object is then created, which can be used for simulation
on new patient data.

The \link{farseer.simulate} does exactly that, it takes patient data, then simulates a variable
(for example: height, age or ASA score) and for all combinations of those
simulated variables calculates dependent variables using previously trained models.}
