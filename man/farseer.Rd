% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/farseer.R
\name{farseer}
\alias{farseer}
\title{farseer(function)}
\usage{
##Trains new models. Creates a formula using last variable in data.frame as dependant variable 
##and all others as independent variables.
models <- farseer(dataFrame)

##Retrains models. Creates a formula using last variable in data.frame as dependant variable 
##and all others as independent variables.
models <- farseer(dataFrame, farseerModels)

##Trains new models according to formula.
models <- farseer(formula, dataFrame)

##Retrains the models using new data. 
models <- farseer(formula, dataFrame, farseerModels)

##Trains new models according to formula, then repeats the process for each variable
##specified in target_variables
models <- farseer(formula, dataFrame, additional_targetc = c(<additional dependant variable names>))

##Trains new models, then repeats the process for each variable specified in target_variables.
##Creates a formula using last variable in data.frame as dependant variable 
##and all others as independent variables, excluding variables specified in target_variables
models <- farseer(dataFrame, additional_targetc = c(<additional dependant variable names>))
}
\arguments{
\item{formula}{a formula for building models. If it is ommited, a new formula will be created using
last variable in data.frame as dependant variable and all others as independent variables.}

\item{dataFrame}{a data.frame containing data to be used for training.}

\item{additional_targets}{a list of dependant variables, other then the one specified in formula,
if models for more then one dependand variable should be created. Note, that in current version separate models are
created. If all dependant variables are situated as last variables in the data.frame, farseer can be used without
providing formula, as it will be automatically created.}

\item{farseerModels}{optional parameter, when existing models are supossed to be retrained.
If it remains NULL, a new set of models will be returned.}

\item{test}{boolean, if TRUE the models will be tested. Default is TRUE.}

\item{...}{additional parameters for plotting. See \code{\link{plot.farseer.models}} for details.}
}
\value{
\strong{If \code{additional_targets = NULL}, a list:}
\describe{
\item{$models}{\code{\link{farseer.models}}}
\item{$data.frames}{\code{\link{farseer.data.frames}}}

\strong{If \code{additional_targets} are provided, a list:}
\describe{
\item{\code{$<dependant variable name>}}{list of models and data.frames as described above}
\item{\code{$<additional_targets[1]>}}{list of models and data.frames as described above, for first additional target}
\item{...}
\item{\code{$<additional_targets[n]>}}{list of models and data.frames as described above, for last additional target}
}
}
}
\description{
Wrapper for easy user of the farseer package.
}
\details{
It generates three models, wrapped in an \code{\link{farseer.models}}-object. A linear model, neural networks
and partition tree. Those models can be then plotted using the generic \code{plot} function.
Additionally, the \code{\link{farseer.data.frames}} are also returned for further reference.

see \code{\link{farseer.models}} or \code{\link{farseer.data.frames}} for more details.

Dependant and independant variables can be either provided as formula, or if all variables should be used
one can simply place the dependant variable as last variable in \code{dataFrame}.
If models should be created for more than one variable simultaniously, additional dependand variables
can be specified. They will be excluded from dataFrame prior to training.
}
